
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { useThree } from "@react-three/fiber";

export default function Model(props) {

  const { camera } = useThree()
  camera.position.set(0.5, 1.5, 0)
  camera.rotateY = Math.PI / 2

  const group = useRef();
  const { nodes, materials } = useGLTF("/Garfield.gltf");

  const map = useTexture('./textures/diffuse.jpg')
  map.flipY = false

  const normal = useTexture('./textures/normal.png')
  normal.flipY = false

  const roughness = useTexture('./textures/roughness.png')
  roughness.flipY = false

  const material = materials["Null Texture"]
  material.map = map
  material.emissiveMap = map
  material.roughnessMap = roughness
  material.roughness = 0.9
  material.normalMap = normal
  console.log(material)

  return (
    <group ref={group} {...props} dispose={null} >
      <mesh
        geometry={nodes.Garfield.geometry}
        material={material}
      />
    </group>
  );
}

useGLTF.preload("/Garfield.gltf");